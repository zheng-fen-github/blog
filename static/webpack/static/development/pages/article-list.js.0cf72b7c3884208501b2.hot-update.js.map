{"version":3,"file":"static/webpack/static\\development\\pages\\article-list.js.0cf72b7c3884208501b2.hot-update.js","sources":["webpack:///./pages/article-list.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport fetch from \"node-fetch\";\r\nimport Head from \"next/head\";\r\nimport Router from \"next/router\";\r\n\r\nimport Nav from \"../component/public/nav\";\r\nimport MinNav from \"../component/articleList/minNav\";\r\nimport ContentList from \"../component/articleList/contentList\";\r\nimport Footer from \"../component/articleList/footer\";\r\n\r\nconst ArticleList = ({ data, list, count }) => {\r\n  useEffect(() => {\r\n    if (!data) {\r\n      Router.push(\"/500\");\r\n    }\r\n  }, []);\r\n\r\n  const [routerStatus, setRouterStatus] = useState(false);\r\n  const handleRouteChange = () => {\r\n    setRouterStatus(true);\r\n  };\r\n  Router.events.on(\"routeChangeStart\", handleRouteChange);\r\n\r\n  const [state, setState] = useState(data);\r\n  const [initState, setInitState] = useState({ data, count });\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(count);\r\n  const [type, setType] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Article</title>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\"\r\n          integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n          crossorigin=\"anonymous\"\r\n        ></link>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"//at.alicdn.com/t/font_1748919_piihixc593j.css\"\r\n        />\r\n        <link rel=\"icon\" href=\"/logo.jpg\" type=\"image/x-icon\"></link>\r\n      </Head>\r\n      <div className=\"container-fluid\">\r\n        <nav className=\"row mx-0\">\r\n          <div className=\"col-12 px-0\">\r\n            <Nav>\r\n              <img src=\"article-list-bg.jpg\" alt=\"bg\" />\r\n            </Nav>\r\n          </div>\r\n        </nav>\r\n\r\n        <MinNav\r\n          setState={setState}\r\n          setType={setType}\r\n          setPage={setPage}\r\n          setLoad={setLoading}\r\n          list={list}\r\n          oldState={initState}\r\n          setPage={setPage}\r\n        />\r\n\r\n        <ContentList\r\n          state={state}\r\n          type={type}\r\n          setState={setState}\r\n          loading={loading}\r\n          count={page}\r\n        />\r\n\r\n        <Footer />\r\n        {routerStatus && (\r\n          <div className=\"loadAnima\"> {/*  路由变化时 提示动画 */}</div>\r\n        )}\r\n      </div>\r\n\r\n      <style jsx global>{`\r\n        *,\r\n        body {\r\n          margin: 0;\r\n          padding: 0;\r\n          box-sizing: border-box;\r\n        }\r\n        img {\r\n          width: 100%;\r\n          height: auto;\r\n        }\r\n        html {\r\n          font-size: 10px;\r\n        }\r\n        .container-fluid {\r\n          padding: 0;\r\n          overflow-x: hidden;\r\n        }\r\n        @media (max-width: 600px) {\r\n          html {\r\n            font-size: 6px;\r\n          }\r\n        }\r\n        @media (max-width: 400px) {\r\n          html {\r\n            font-size: 5px;\r\n          }\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async () => {\r\n  const RURL = process.env.DATA_URL + \"addArticle/gotArticleList/1\";\r\n  let res = await fetch(RURL);\r\n  if (res.status === 404) return { props: { data: null } };\r\n  let result = await res.json();\r\n  console.log(result);\r\n  return {\r\n    props: {\r\n      data: result.data,\r\n      list: result.list,\r\n      count: result.count,\r\n    },\r\n  };\r\n};\r\nexport default ArticleList;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAZA;AAAA;AAAA;AACA;AADA;AAcA;AAAA;AAAA;AAdA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAkBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5CA;AAAA;AAAA;AA+EA;AACA;;AAeA;;;;A","sourceRoot":""}