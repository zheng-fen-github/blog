{"version":3,"file":"static/webpack/static\\development\\pages\\component.js.83ff57da2497756b2ae7.hot-update.js","sources":["webpack:///./component/component/root.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Content from \"./content\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Root = ({ action, contentType }) => {\r\n  let value = contentType === \"none\" ? \"React\" : contentType;\r\n  console.log(value);\r\n  const [type, setType] = useState(value);\r\n  useEffect(() => {\r\n    getphoto(value);\r\n  }, []);\r\n  const selectType = (e) => {\r\n    let dom = e.target.closest(\"h3\");\r\n    if (dom) {\r\n      setType(() => dom.textContent);\r\n      getphoto(dom.textContent);\r\n    }\r\n  };\r\n  const getphoto = async (typeV) => {\r\n    console.log(typeV);\r\n    try {\r\n      const QURL = process.env.DATA_URL + \"getComponentList/all/\" + typeV;\r\n      let get = await fetch(QURL);\r\n      if (get.ok) {\r\n        let message = await get.json();\r\n        console.log(message);\r\n        action({\r\n          type: \"GET_TYPE\",\r\n          list: message.typeList,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const scrollTop = () => {\r\n    let navDom = document.querySelector(\".component-nav\");\r\n    navDom.scrollIntoView(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row root\">\r\n      <div className=\"col-10 offset-1\">\r\n        <div className=\"row p-0\">\r\n          <div className=\"offset-0 offset-xl-3 col\">\r\n            <ul className=\"d-flex component-nav\" onClick={selectType}>\r\n              <li className={type === \"React\" ? \"seled\" : \"\"}>\r\n                <h3>React</h3>\r\n              </li>\r\n              <li className={type === \"JS\" ? \"seled\" : \"\"}>\r\n                <h3>JS</h3>\r\n              </li>\r\n              <li className={type === \"CSS\" ? \"seled\" : \"\"}>\r\n                <h3>CSS</h3>\r\n              </li>\r\n              <li className={type === \"Node\" ? \"seled\" : \"\"}>\r\n                <h3>Node</h3>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"goTop position-fixed\" onClick={scrollTop}>\r\n          <i className=\"iconfont icon-arrow-forward\"></i>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-xl-3\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"offset-0 offset-xl-1 col-12 col-xl-8\">\r\n            <Content type={value} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <style jsx>\r\n        {`\r\n          .root {\r\n            margin: 0;\r\n            margin-bottom: 20rem;\r\n            z-index: 1001;\r\n          }\r\n          .goTop {\r\n            top: 50%;\r\n            right: 10px;\r\n            transform: rotate(-90deg) translateZ(0);\r\n            background: black;\r\n            color: white;\r\n            width: 4rem;\r\n            height: 4rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            border-radius: 6px;\r\n            overflow: hidden;\r\n            cursor: pointer;\r\n          }\r\n          .goTop:hover {\r\n            background: white;\r\n            color: black;\r\n          }\r\n          .goTop i {\r\n            font-size: 3rem;\r\n          }\r\n          ul {\r\n            list-style: none;\r\n            background: black;\r\n            color: white;\r\n            margin-bottom: 10rem;\r\n            transform: translateY(-50%);\r\n            position: sticky;\r\n            top: 200px;\r\n            z-index: 1001;\r\n          }\r\n          li {\r\n            flex: 1;\r\n            cursor: pointer;\r\n            transition: 0.4s;\r\n            z-index: 1001;\r\n          }\r\n          li.seled {\r\n            opacity: 0.5;\r\n            z-index: 1001;\r\n          }\r\n          li:hover {\r\n            opacity: 0.5;\r\n            transform: translateY(-25%);\r\n          }\r\n          h3 {\r\n            padding: 2rem;\r\n            font-size: 2.5rem;\r\n            text-align: center;\r\n            z-index: 1001;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\nconst state = (store) => ({ data: store });\r\nconst dispatch = (dispatch) => ({ action: dispatch });\r\n\r\nexport default connect(state, dispatch)(Root);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AAFA;AACA;AATA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgsourceRoot":""}