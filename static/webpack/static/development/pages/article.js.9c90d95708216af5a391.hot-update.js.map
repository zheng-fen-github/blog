{"version":3,"file":"static/webpack/static\\development\\pages\\article.js.9c90d95708216af5a391.hot-update.js","sources":["webpack:///./pages/article.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Head from \"next/head\";\r\nimport fetch from \"node-fetch\";\r\nimport Router from \"next/router\";\r\n\r\nimport Nav from \"../component/public/nav\";\r\nimport Author from \"../component/article/author\";\r\nimport ArtContent from \"../component/article/articleContent\";\r\nimport About from \"../component/article/about\";\r\nimport Comment from \"../component/article/comment\";\r\nimport Footer from \"../component/home/footer\";\r\n\r\nconst Home = ({ data }) => {\r\n  const fontsizeEvent = () => {\r\n    let style = document.documentElement.style;\r\n    if (window.innerWidth < 960) {\r\n      style.fontSize = \"6px\";\r\n    } else {\r\n      style.fontSize = \"10px\";\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!data) {\r\n      Router.replace(\"/404\");\r\n    }\r\n    fontsizeEvent();\r\n    window.addEventListener(\"resize\", () => {\r\n      fontsizeEvent();\r\n    });\r\n  }, []);\r\n  const [state, setState] = useState(data);\r\n\r\n  const [routerStatus, setRouterStatus] = useState(false); // 路由变化事件\r\n  const handleRouteChange = (url) => {\r\n    setRouterStatus(true);\r\n  };\r\n  Router.events.on(\"routeChangeStart\", handleRouteChange);\r\n  return (\r\n    <>\r\n      <Head>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\"\r\n          integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n          crossorigin=\"anonymous\"\r\n        ></link>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"//at.alicdn.com/t/font_1748919_piihixc593j.css\"\r\n        />\r\n        <link rel=\"icon\" href=\"/logo.jpg\" type=\"image/x-icon\"></link>\r\n        <title> 文章 </title>\r\n      </Head>\r\n      <div className=\"container-fluid\">\r\n        <nav>\r\n          <Nav>\r\n            <img src=\"article-bg.jpg\" alt=\"bg\" />\r\n          </Nav>\r\n        </nav>\r\n        {state && (\r\n          <>\r\n            <Author {...data} />\r\n\r\n            <ArtContent content={data.ArticleContent} />\r\n\r\n            <About\r\n              linkList={data.ArticleAboutLink}\r\n              message={data.ArticleAboutIntroduction}\r\n            />\r\n\r\n            <Comment message={data.comment} id={data._id} />\r\n\r\n            <Footer />\r\n          </>\r\n        )}\r\n        {routerStatus && (\r\n          <div className=\"loadAnima\"> {/*  路由变化时 提示动画 */}</div>\r\n        )}\r\n      </div>\r\n      <style jsx>\r\n        {`\r\n          .loadAnima {\r\n            position: fixed;\r\n            left: 0;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            background: black;\r\n            animation: Loading 2s 10;\r\n            z-index: 9999;\r\n          }\r\n          img {\r\n            width: 100%;\r\n            height: auto;\r\n          }\r\n\r\n          @keyframes Loading {\r\n            0% {\r\n              opacity: 0;\r\n            }\r\n            50% {\r\n              opacity: 1;\r\n            }\r\n            100% {\r\n              opacity: 0;\r\n            }\r\n          }\r\n        `}\r\n      </style>\r\n      <style jsx global>{`\r\n        *,\r\n        body {\r\n          margin: 0;\r\n          padding: 0;\r\n          box-sizing: border-box;\r\n        }\r\n        html {\r\n          font-size: 10px;\r\n        }\r\n        .container-fluid {\r\n          padding: 0;\r\n        }\r\n        .photo img {\r\n          width: auto;\r\n          max-width: 100%;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\nexport const getServerSideProps = async (context) => {\r\n  const RURL =\r\n    process.env.DATA_URL + \"addArticle/gotArticle/\" + context.query.id;\r\n  let res = await fetch(RURL);\r\n  if (res.status === 404) return { props: { data: null } };\r\n  let result = await res.json();\r\n  return {\r\n    props: {\r\n      data: result,\r\n    },\r\n  };\r\n};\r\nexport default Home;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAmtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2FA;AACA;;AAYA;;;;A","sourceRoot":""}