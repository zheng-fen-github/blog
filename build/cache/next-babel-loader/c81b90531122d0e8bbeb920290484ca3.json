{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst ContentReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ALL_CONTENT':\n      return action.data.map(e => {\n        e.filter = false;\n        return e;\n      });\n\n    case 'SHOW_CONTENT':\n      return state.map(e => {\n        e.filter = false;\n        return e;\n      });\n\n    case 'FILTER_CONTENT':\n      let result = state.map(e => {\n        if (e.ComponentType !== action.filterType) {\n          e.filter = true;\n        } else {\n          e.filter = false;\n        }\n\n        return e;\n      });\n      console.log(result);\n      return result;\n\n    case 'SEACTH_CONTENT':\n      let result2 = state.map(e => {\n        if (e.ComponentTitle.includes(action.title)) {\n          e.filter = false;\n        } else {\n          e.filter = true;\n        }\n\n        return e;\n      });\n      return result2;\n\n    default:\n      return state;\n  }\n};\n\nlet inisitalState = {\n  list: [],\n  loading: false\n};\n\nconst TypeReducer = (state = inisitalState, action) => {\n  switch (action.type) {\n    case 'GET_TYPE':\n      return Object.assign({}, state, {\n        list: action.list\n      });\n\n    case 'LADING_CONTENN':\n      return Object.assign({}, state, {\n        loading: action.loading\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst ComponentApp = combineReducers({\n  ContentReducer,\n  TypeReducer\n});\nexport default ComponentApp;","map":null,"metadata":{},"sourceType":"module"}