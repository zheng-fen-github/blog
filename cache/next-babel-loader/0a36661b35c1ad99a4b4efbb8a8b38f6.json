{"ast":null,"code":"var _jsxFileName = \"C:\\\\newlife\\\\newSite\\\\my-app\\\\component\\\\login\\\\addComponenttwo\\\\left-root.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Nav from './nav';\nimport Sort from './sort';\nimport Photo from './photo';\n\nconst LeftRoot = () => {\n  useEffect(() => {\n    reqData();\n  }, []);\n\n  const reqData = async () => {\n    let res = await fetch('http://localhost:4040/getComponentList/all');\n\n    if (res.ok) {\n      let data = await res.json();\n      setTypeList(data);\n      setSortList(data[0].typeList);\n    }\n  };\n\n  const {\n    0: sortList,\n    1: setSortList\n  } = useState([]);\n  const {\n    0: typeList,\n    1: setTypeList\n  } = useState([]);\n\n  const changeList = data => {\n    if (Array.isArray(data)) {\n      setSortList(data);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"left-root row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, typeList.length > 0 && __jsx(Nav, {\n    list: typeList,\n    setList: changeList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Sort, {\n    selectList: sortList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), __jsx(Photo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default LeftRoot;","map":{"version":3,"sources":["C:/newlife/newSite/my-app/component/login/addComponenttwo/left-root.js"],"names":["React","useEffect","useState","Nav","Sort","Photo","LeftRoot","reqData","res","fetch","ok","data","json","setTypeList","setSortList","typeList","sortList","changeList","Array","isArray","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO;AACV,GAFQ,EAEP,EAFO,CAAT;;AAGA,QAAMA,OAAO,GAAG,YAAY;AACxB,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAArB;;AACA,QAAGD,GAAG,CAACE,EAAP,EAAW;AACP,UAAIC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAjB;AACAC,MAAAA,WAAW,CAACF,IAAD,CAAX;AACAG,MAAAA,WAAW,CAACH,IAAI,CAAC,CAAD,CAAJ,CAAQI,QAAT,CAAX;AACH;AACJ,GAPD;;AAQA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWF;AAAX,MAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWF;AAAX,MAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMe,UAAU,GAAIN,IAAD,IAAU;AACzB,QAAGO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAH,EAAuB;AACnBG,MAAAA,WAAW,CAACH,IAAD,CAAX;AACH;AACJ,GAJD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACII,QAAQ,CAACK,MAAT,GAAkB,CAAlB,IAAwB,MAAC,GAAD;AAAK,IAAA,IAAI,EAAGL,QAAZ;AAAuB,IAAA,OAAO,EAAEE,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAM,IAAA,UAAU,EAAKD,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJJ,EAOG,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,CADJ;AAWH,CA9BD;;AAgCA,eAAeV,QAAf","sourcesContent":["import React,{useEffect ,useState} from 'react'\r\nimport Nav from './nav'\r\nimport Sort from './sort'\r\nimport Photo from './photo'\r\n\r\nconst LeftRoot = () => {\r\n    useEffect(() => {\r\n        reqData();\r\n    },[])\r\n    const reqData = async () => {\r\n        let res = await fetch('http://localhost:4040/getComponentList/all');\r\n        if(res.ok) {\r\n            let data = await res.json();\r\n            setTypeList(data)\r\n            setSortList(data[0].typeList)\r\n        }\r\n    }\r\n    const [sortList, setSortList] = useState([])\r\n    const [typeList, setTypeList] = useState([])\r\n    const changeList = (data) => {\r\n        if(Array.isArray(data)){\r\n            setSortList(data)\r\n        }        \r\n    }\r\n    return (\r\n        <div className='left-root row justify-content-center'>\r\n            <div className=\"col-6\">\r\n               {typeList.length > 0  && <Nav list={ typeList } setList={changeList}/> }\r\n            </div>\r\n            <div className=\"col-4\">\r\n            <Sort selectList = { sortList } />\r\n            </div>            \r\n           <Photo/>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftRoot\r\n"]},"metadata":{},"sourceType":"module"}