{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\newlife\\\\newSite\\\\my-app\\\\component\\\\photo\\\\photo.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\n\nvar Photo = function Photo(_ref) {\n  var id = _ref.id,\n      name = _ref.name;\n\n  var _useState = useState(null),\n      bolb = _useState[0],\n      setBolb = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var getphoto = function getphoto() {\n    var QURL, get, blob, src;\n    return _regeneratorRuntime.async(function getphoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            QURL = process.env.DATA_URL + 'addphoto/getphoto/' + id;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(QURL));\n\n          case 4:\n            get = _context.sent;\n\n            if (!get.ok) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(get.blob());\n\n          case 8:\n            blob = _context.sent;\n            src = URL.createObjectURL(blob);\n            setBolb(src);\n\n          case 11:\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            setError(true);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  useEffect(function () {\n    getphoto();\n  }, [id]);\n  return __jsx(React.Fragment, null, bolb && __jsx(\"img\", {\n    src: bolb,\n    alt: name,\n    className: \"w-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }), error && __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }\n  }, \"      Wron       \"));\n};\n\nexport default Photo;","map":{"version":3,"sources":["C:/newlife/newSite/my-app/component/photo/photo.js"],"names":["React","useEffect","useState","Photo","id","name","bolb","setBolb","error","setError","getphoto","QURL","process","env","DATA_URL","fetch","get","ok","blob","src","URL","createObjectURL","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAbC,EAAa,QAAbA,EAAa;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAAA,kBACDH,QAAQ,CAAC,IAAD,CADP;AAAA,MAClBI,IADkB;AAAA,MACZC,OADY;;AAAA,mBAECL,QAAQ,CAAC,KAAD,CAFT;AAAA,MAElBM,KAFkB;AAAA,MAEXC,QAFW;;AAGzB,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,YAAAA,IAFG,GAEIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,oBAAvB,GAA6CV,EAFjD;AAAA;AAAA,6CAGOW,KAAK,CAAEJ,IAAF,CAHZ;;AAAA;AAGLK,YAAAA,GAHK;;AAAA,iBAINA,GAAG,CAACC,EAJE;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAKYD,GAAG,CAACE,IAAJ,EALZ;;AAAA;AAKDA,YAAAA,IALC;AAMDC,YAAAA,GANC,GAMKC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CANL;AAOLX,YAAAA,OAAO,CAACY,GAAD,CAAP;;AAPK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUVG,YAAAA,OAAO,CAACC,GAAR;AACCd,YAAAA,QAAQ,CAAC,IAAD,CAAR;;AAXS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAeAR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACN,EAAD,CAFM,CAAT;AAGA,SACI,4BACIE,IAAI,IAAI;AAAK,IAAA,GAAG,EAAEA,IAAV;AAAiB,IAAA,GAAG,EAAED,IAAtB;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEIG,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFb,CADJ;AAMH,CA3BD;;AA6BA,eAAeL,KAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\r\n\r\nconst Photo = ({id,name}) => {\r\n    const [bolb, setBolb] = useState(null)\r\n    const [error, setError] = useState(false)\r\n    const getphoto = async () => {\r\n        try {\r\n            const QURL = process.env.DATA_URL + 'addphoto/getphoto/'+ id\r\n            let get = await fetch( QURL )\r\n            if(get.ok) {\r\n                let blob = await get.blob();\r\n                let src = URL.createObjectURL(blob);\r\n                setBolb(src);\r\n            }\r\n        }catch(err) {\r\n           console.log(err);\r\n            setError(true);\r\n        }\r\n        \r\n    }\r\n    useEffect(() => {\r\n        getphoto();        \r\n    }, [id])\r\n    return (\r\n        <>\r\n           {bolb && <img src={bolb}  alt={name} className='w-100'/>}          \r\n           {error && <h2>      Wron       </h2> }          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Photo\r\n"]},"metadata":{},"sourceType":"module"}