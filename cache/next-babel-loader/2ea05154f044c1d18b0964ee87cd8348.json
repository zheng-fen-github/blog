{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport Photo from './photo';\n\nconst ArtContent = ({\n  setLinkList\n}) => {\n  useEffect(() => {\n    //初次加载文档 检测是否有内容事件\n    let Value = localStorage.getItem('article-content-object');\n\n    if (!Value) {\n      let data = JSON.stringify([{\n        key: 'content-id-1',\n        type: 'text',\n        value: ''\n      }]);\n      localStorage.setItem('article-content-object', data);\n      return;\n    }\n\n    let dataList = JSON.parse(Value);\n    setInitialTextareList(dataList);\n  }, []);\n  const {\n    0: initialTextareList,\n    1: setInitialTextareList\n  } = useState([{\n    key: 'content-id-1',\n    type: 'text',\n    value: ''\n  }]);\n\n  const inputEv = (e, index) => {\n    //设置文档内容事件        \n    let dom = e.target; // 内容高度自动适应                    \n\n    dom.style.height = dom.scrollHeight > dom.offsetHeight ? dom.scrollHeight + 10 + 'px' : dom.offsetHeight + 'px';\n    let oldValue = localStorage.getItem('article-content-object');\n    if (!oldValue) return;\n    let mianData = JSON.parse(oldValue); // 根据输入的值 更新状态和localstorage！！\n\n    mianData[index].value = e.target.value;\n    localStorage.setItem('article-content-object', JSON.stringify(mianData));\n    setInitialTextareList(mianData);\n  };\n\n  const deleteEv = index => {\n    //删除掉文章 段落事件\n    let content = initialTextareList.filter(item => item.type === 'text');\n    if (content.length === 1) return;\n    let newList = initialTextareList.filter((e, Cindex) => Cindex !== index);\n    setInitialTextareList(newList);\n    localStorage.setItem('article-content-object', JSON.stringify(newList));\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-2699354276\" + \" \" + 'row Content  mx-0'\n  }, __jsx(AddG, {\n    setList: setInitialTextareList,\n    id: initialTextareList,\n    setLinkList: setLinkList\n  }), __jsx(\"div\", {\n    className: \"jsx-2699354276\" + \" \" + \"col-8 offset-2\"\n  }, initialTextareList.map((e, index) => {\n    if (e.type === 'text') return __jsx(\"div\", {\n      key: e.key,\n      className: \"jsx-2699354276\" + \" \" + \"row content-item position-relative\"\n    }, __jsx(\"textarea\", {\n      name: \"message\",\n      required: index === 0 ? true : false,\n      value: e.value,\n      onInput: e => inputEv(e, index),\n      onChange: e => inputEv(e, index),\n      className: \"jsx-2699354276\" + \" \" + 'w-100 px-4'\n    }), __jsx(\"div\", {\n      onClick: () => deleteEv(index),\n      className: \"jsx-2699354276\" + \" \" + \"delete\"\n    }, __jsx(\"i\", {\n      className: \"jsx-2699354276\" + \" \" + 'iconfont icon-trash-'\n    })));\n    if (e.type === 'photo') return __jsx(Photo, {\n      key: e.key,\n      state: initialTextareList,\n      setState: setInitialTextareList,\n      title: e.title,\n      index: index,\n      name: e.key\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"2699354276\"\n  }, [\".Content.jsx-2699354276{margin-top:10rem;border-bottom:2px solid #eaeaea;}\", \".content-item.jsx-2699354276{margin-bottom:5rem;}\", \"textarea.jsx-2699354276{font-size:2.5rem;line-height:2;min-height:40vh;}\", \".delete.jsx-2699354276{position:absolute;right:-50px;top:50%;}\", \".delete.jsx-2699354276 i.jsx-2699354276{background:none;color:black;}\", \".delete.jsx-2699354276 i.jsx-2699354276:hover{background:black;color:white;}\", \"i.jsx-2699354276{color:white;font-size:2rem;padding:0.5rem;background:#3a5999;border-radius:50%;cursor:pointer;}\"]));\n};\n\nconst AddG = React.memo(({\n  setList,\n  setLinkList\n}) => {\n  const addText = () => {\n    let oldValue = localStorage.getItem('article-content-object');\n    if (!oldValue) return;\n    let value = JSON.parse(oldValue);\n    value.push({\n      key: 'content-id-' + (value.length + 1),\n      type: 'text',\n      value: ''\n    });\n    let data = JSON.stringify(value);\n    localStorage.setItem('article-content-object', data);\n    setList(value);\n  };\n\n  const addPhoto = () => {\n    let oldValue = localStorage.getItem('article-content-object');\n    if (!oldValue) return;\n    let value = JSON.parse(oldValue);\n    value.push({\n      key: 'content-id-' + (value.length + 1),\n      type: 'photo',\n      title: ''\n    });\n    let data = JSON.stringify(value);\n    localStorage.setItem('article-content-object', data);\n    setList(value);\n  };\n\n  const addLink = () => {\n    setLinkList(preState => [...preState, 'a']);\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1377131071\" + \" \" + 'addG'\n  }, __jsx(\"ul\", {\n    className: \"jsx-1377131071\"\n  }, __jsx(\"li\", {\n    className: \"jsx-1377131071\"\n  }, __jsx(\"i\", {\n    onClick: addText,\n    className: \"jsx-1377131071\" + \" \" + 'iconfont icon-file-text'\n  })), __jsx(\"li\", {\n    className: \"jsx-1377131071\"\n  }, __jsx(\"i\", {\n    onClick: addPhoto,\n    className: \"jsx-1377131071\" + \" \" + 'iconfont icon-image'\n  })), __jsx(\"li\", {\n    className: \"jsx-1377131071\"\n  }, __jsx(\"i\", {\n    onClick: addLink,\n    className: \"jsx-1377131071\" + \" \" + 'iconfont icon-link'\n  }))), __jsx(_JSXStyle, {\n    id: \"1377131071\"\n  }, [\".addG.jsx-1377131071{position:fixed;top:50%;left:0;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);}\", \"li.jsx-1377131071{height:40px;width:40px;background:black;border-radius:50%;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:1rem 0.5rem;-webkit-transition:.4s;transition:.4s;}\", \"li.jsx-1377131071:hover{-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2);}\", \"i.jsx-1377131071{color:white;font-size:20px;}\"]));\n});\nexport default ArtContent;","map":null,"metadata":{},"sourceType":"module"}