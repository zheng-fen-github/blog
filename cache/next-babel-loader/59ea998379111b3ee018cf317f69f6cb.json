{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\n\nconst Photo = ({\n  id,\n  name,\n  classname\n}) => {\n  const {\n    0: bolb,\n    1: setBolb\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: load,\n    1: setLoad\n  } = useState(false);\n\n  const getphoto = async () => {\n    try {\n      const QURL = process.env.DATA_URL + \"addphoto/getphoto/\" + id;\n      setLoad(true);\n      let get = await fetch(QURL);\n\n      if (get.ok) {\n        let blob = await get.blob();\n        let img = document.createElement(\"img\");\n        img.src = URL.createObjectURL(blob);\n\n        img.onload = () => {\n          document.querySelector(\".photo-container\").append(img);\n          canvasFunc(img.offsetWidth, img.offsetHeight, img, setBolb);\n          setLoad(false);\n        };\n      }\n    } catch (err) {\n      console.log(err);\n      setError(true);\n      setLoad(false);\n    }\n  };\n\n  useEffect(() => {\n    getphoto();\n  }, [id]);\n  return __jsx(React.Fragment, null, bolb && __jsx(\"img\", {\n    src: URL.createObjectURL(bolb),\n    alt: name,\n    className: \"jsx-2887014874\" + \" \" + \"w-100\"\n  }), load && __jsx(\"div\", {\n    className: \"jsx-2887014874\" + \" \" + (\"loading \" + classname || \"\")\n  }), error && __jsx(\"h2\", {\n    className: \"jsx-2887014874\"\n  }, \" \\u52A0\\u8F7D\\u56FE\\u7247\\u5931\\u8D25 \"), __jsx(\"div\", {\n    style: {\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      visibility: \"hidden\",\n      userSelect: \"none\"\n    },\n    className: \"jsx-2887014874\" + \" \" + \"photo-container\"\n  }), __jsx(\"canvas\", {\n    id: \"canvas\",\n    hidden: true,\n    className: \"jsx-2887014874\"\n  }), __jsx(_JSXStyle, {\n    id: \"2887014874\"\n  }, [\".loading.jsx-2887014874{width:100%;height:20px;background:black;height:20vh;-webkit-animation:show-jsx-2887014874 2s infinite;animation:show-jsx-2887014874 2s infinite;z-index:99;}\", \".right.jsx-2887014874{height:44vh;}\", \"@-webkit-keyframes show-jsx-2887014874{0%{background:black;}50%{background:#cbcbcb;}100%{background:black;}}\", \"@keyframes show-jsx-2887014874{0%{background:black;}50%{background:#cbcbcb;}100%{background:black;}}\"]));\n};\n\nconst canvasFunc = (W, H, img, loadPhoto) => {\n  let canvas = document.getElementById(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let count = Math.min(W, H);\n  canvas.width = count;\n  canvas.height = count;\n  let w = (Math.max(W, H) - count) / 2;\n  W > H ? ctx.drawImage(img, -w, 0) : ctx.drawImage(img, 0, -w); //裁减成一比一\n\n  canvas.toBlob(blob => {\n    // 输出图片\n    loadPhoto(blob);\n  }, \"image/png\");\n};\n\nexport default Photo;","map":null,"metadata":{},"sourceType":"module"}