{"ast":null,"code":"import axios from \"axios\";\n\nconst feature = (url, method, type = \"json\", data) => {\n  if (!url) throw new Error(\"缺少url属性\");\n  if (!url) throw new Error(\"缺少url属性\");\n  new Promise((resolve, reject) => {\n    switch (method) {\n      case \"get\":\n        axios.get(url, {\n          responseType: type\n        }).then(res => resolve(res.data)).catch(err => reject(err));\n        break;\n\n      case \"post\":\n      case \"put\":\n      case \"delete\":\n        axios({\n          url,\n          method,\n          data\n        }).then(res => resolve(res.data)).catch(err => reject(err));\n        break;\n\n      default:\n        reject(new Error(\"没有匹配的方法\"));\n    }\n  });\n};\n\nexport default feature;","map":{"version":3,"sources":["C:/newlife/newSite/my-app/component/test/axios.js"],"names":["axios","feature","url","method","type","data","Error","Promise","resolve","reject","get","responseType","then","res","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,IAAI,GAAG,MAArB,EAA6BC,IAA7B,KAAsC;AACpD,MAAI,CAACH,GAAL,EAAU,MAAM,IAAII,KAAJ,CAAU,SAAV,CAAN;AACV,MAAI,CAACJ,GAAL,EAAU,MAAM,IAAII,KAAJ,CAAU,SAAV,CAAN;AACV,MAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,YAAQN,MAAR;AACE,WAAK,KAAL;AACEH,QAAAA,KAAK,CACFU,GADH,CACOR,GADP,EACY;AAAES,UAAAA,YAAY,EAAEP;AAAhB,SADZ,EAEGQ,IAFH,CAESC,GAAD,IAASL,OAAO,CAACK,GAAG,CAACR,IAAL,CAFxB,EAGGS,KAHH,CAGUC,GAAD,IAASN,MAAM,CAACM,GAAD,CAHxB;AAIA;;AACF,WAAK,MAAL;AACA,WAAK,KAAL;AACA,WAAK,QAAL;AACEf,QAAAA,KAAK,CAAC;AAAEE,UAAAA,GAAF;AAAOC,UAAAA,MAAP;AAAeE,UAAAA;AAAf,SAAD,CAAL,CACGO,IADH,CACSC,GAAD,IAASL,OAAO,CAACK,GAAG,CAACR,IAAL,CADxB,EAEGS,KAFH,CAEUC,GAAD,IAASN,MAAM,CAACM,GAAD,CAFxB;AAGA;;AACF;AACEN,QAAAA,MAAM,CAAC,IAAIH,KAAJ,CAAU,SAAV,CAAD,CAAN;AAfJ;AAiBD,GAlBD;AAmBD,CAtBD;;AAuBA,eAAeL,OAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst feature = (url, method, type = \"json\", data) => {\r\n  if (!url) throw new Error(\"缺少url属性\");\r\n  if (!url) throw new Error(\"缺少url属性\");\r\n  new Promise((resolve, reject) => {\r\n    switch (method) {\r\n      case \"get\":\r\n        axios\r\n          .get(url, { responseType: type })\r\n          .then((res) => resolve(res.data))\r\n          .catch((err) => reject(err));\r\n        break;\r\n      case \"post\":\r\n      case \"put\":\r\n      case \"delete\":\r\n        axios({ url, method, data })\r\n          .then((res) => resolve(res.data))\r\n          .catch((err) => reject(err));\r\n        break;\r\n      default:\r\n        reject(new Error(\"没有匹配的方法\"));\r\n    }\r\n  });\r\n};\r\nexport default feature;\r\n"]},"metadata":{},"sourceType":"module"}