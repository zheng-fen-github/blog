{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\n\nconst AuthorPhoto = () => {\n  const {\n    0: photo,\n    1: setPhoto\n  } = useState(null);\n\n  const clickEv = e => {\n    e.target.nextElementSibling.click();\n  };\n\n  const clickEv2 = e => {\n    e.target.previousElementSibling.click();\n  };\n\n  const fileChange = e => {\n    try {\n      let file = e.target.files[0];\n      let img = document.createElement('img');\n      img.src = URL.createObjectURL(file);\n\n      img.onload = () => {\n        document.querySelector('.photo-container').append(img);\n        canvasFunc(img.offsetWidth, img.offsetHeight, img, setPhoto);\n      };\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    let openRequest = indexedDB.open('article-store', 2);\n\n    openRequest.onupgradeneeded = () => {\n      let db = openRequest.result;\n\n      if (!db.objectStoreNames.contains('photoBuffer')) {\n        db.createObjectStore('photoBuffer', {\n          keyPath: 'name'\n        });\n      }\n    };\n\n    openRequest.onsuccess = async () => {\n      let db = openRequest.result;\n      let tx = db.transaction('photoBuffer');\n      let store = tx.objectStore('photoBuffer');\n      let photo = store.get('article-author-photo');\n\n      photo.onsuccess = () => {\n        if (photo.result) {\n          setPhoto(photo.result.file);\n        }\n      };\n    };\n\n    return () => {\n      URL.revokeObjectURL(photo);\n    };\n  }, []);\n  return __jsx(React.Fragment, null, !photo && __jsx(\"div\", {\n    onClick: clickEv,\n    className: \"jsx-2605298663\" + \" \" + \"file-upload-button\"\n  }), __jsx(\"input\", {\n    type: \"file\",\n    name: \"author-photo-file\",\n    onChange: fileChange,\n    className: \"jsx-2605298663\" + \" \" + 'd-none'\n  }), photo && __jsx(\"img\", {\n    src: URL.createObjectURL(photo),\n    alt: \"author-photo\",\n    onClick: clickEv2,\n    className: \"jsx-2605298663\"\n  }), __jsx(\"div\", {\n    style: {\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      visibility: 'hidden',\n      userSelect: 'none'\n    },\n    className: \"jsx-2605298663\" + \" \" + \"photo-container\"\n  }), __jsx(\"canvas\", {\n    id: \"canvas\",\n    hidden: true,\n    className: \"jsx-2605298663\"\n  }), __jsx(\"canvas\", {\n    id: \"canvas2\",\n    hidden: true,\n    className: \"jsx-2605298663\"\n  }), __jsx(_JSXStyle, {\n    id: \"2605298663\"\n  }, [\".file-upload-button.jsx-2605298663{width:80px;height:80px;background:black;cursor:pointer;}\", \"img.jsx-2605298663{cursor:pointer;}\"]));\n};\n\nconst canvasFunc = (W, H, img, loadPhoto) => {\n  let canvas = document.getElementById('canvas');\n  let ctx = canvas.getContext('2d');\n  let count = Math.min(W, H);\n  canvas.width = count;\n  canvas.height = count;\n  let w = (Math.max(W, H) - count) / 2;\n  W > H ? ctx.drawImage(img, -w, 0) : ctx.drawImage(img, 0, -w); //裁减成一比一    \n\n  let ctx2 = document.getElementById('canvas2').getContext('2d');\n  canvas2.width = 80;\n  canvas2.height = 80;\n  ctx2.drawImage(canvas, 0, 0, 80, 80); // 缩放成40px 40px\n\n  document.getElementById('canvas2').toBlob(blob => {\n    // 输出图片\n    let name = 'authorPhoto.' + blob.type.slice(6, 9);\n    let file = new File([blob], name);\n    loadPhoto(blob);\n    let openRequest = indexedDB.open('article-store', 2);\n\n    openRequest.onsuccess = () => {\n      let DB = openRequest.result;\n      let transaction = DB.transaction('photoBuffer', 'readwrite');\n      let store = transaction.objectStore(\"photoBuffer\");\n      let photo = store.get('article-author-photo');\n\n      photo.onsuccess = () => {\n        if (photo.result) {\n          store.delete('article-author-photo');\n        }\n\n        let bufferItem = {\n          name: 'article-author-photo',\n          file,\n          create: new Date()\n        };\n        let req = store.add(bufferItem);\n\n        req.onerror = () => {\n          console.log('存图片buffer 失败');\n          console.log(req.error);\n        };\n      };\n    }; //    let a = document.createElement('a');       \n    //    a.href = URL.createObjectURL(blob);  \n    //    a.download = true;   \n    //    a.click();     \n\n  }, 'image/png');\n};\n\nexport default AuthorPhoto;","map":null,"metadata":{},"sourceType":"module"}