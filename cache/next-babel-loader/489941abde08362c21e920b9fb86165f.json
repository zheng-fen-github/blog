{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Code from './code';\nimport Pagination from './Pagination';\nimport { connect } from 'react-redux';\nimport Anima from '../public/anima';\n\nvar Content = function Content(_ref) {\n  var type = _ref.type,\n      action = _ref.action,\n      data = _ref.data,\n      loading = _ref.loading;\n\n  var _useState = useState(null),\n      code = _useState[0],\n      setCode = _useState[1];\n\n  var _useState2 = useState(false),\n      shareS = _useState2[0],\n      setShareS = _useState2[1];\n\n  var getphoto = function getphoto() {\n    var QURL, get, message;\n    return _regeneratorRuntime.async(function getphoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            action({\n              type: 'LADING_CONTENN',\n              loading: true\n            });\n            action({\n              type: 'ALL_CONTENT',\n              data: []\n            });\n            QURL = process.env.DATA_URL + 'getComponent/get/';\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(QURL + type));\n\n          case 6:\n            get = _context.sent;\n\n            if (!get.ok) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(get.json());\n\n          case 10:\n            message = _context.sent;\n            action({\n              type: 'ALL_CONTENT',\n              data: message\n            });\n            action({\n              type: 'LADING_CONTENN',\n              loading: false\n            });\n\n          case 13:\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  var arrayResult = useCallback(data.filter(function (e) {\n    return !e.filter;\n  }), [data]);\n  useEffect(function () {\n    getphoto();\n  }, [type]);\n\n  var shareEvent = function shareEvent(boob) {\n    setCode(false);\n\n    if (boob) {\n      setShareS(true);\n      setTimeout(function () {\n        return setShareS(false);\n      }, 1500);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1165678624\" + \" \" + 'row code-content'\n  }, data.length > 0 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-1165678624\" + \" \" + \"col-12 code-count\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-1165678624\"\n  }, \"Showing \", arrayResult.length, \" Results\")), __jsx(Pagination, {\n    type: type,\n    codeList: arrayResult,\n    setCode: setCode\n  })), data.length === 0 && !loading && __jsx(\"h1\", {\n    className: \"jsx-1165678624\"\n  }, \"Showing 0 Results  \"), loading && __jsx(\"div\", {\n    className: \"jsx-1165678624\" + \" \" + \"col-12 my-5 d-flex justify-content-center\"\n  }, __jsx(Anima, {\n    color: \"#fdd303\"\n  })), code && __jsx(Code, {\n    data: code,\n    clear: shareEvent\n  }), shareS && __jsx(\"div\", {\n    className: \"jsx-1165678624\" + \" \" + 'sussWindow d-flex align-items-center justify-content-center'\n  }, __jsx(\"h2\", {\n    className: \"jsx-1165678624\"\n  }, \"\\u590D\\u5236\\u6210\\u529F\\u3002\")), __jsx(_JSXStyle, {\n    id: \"1165678624\"\n  }, [\"h3.jsx-1165678624{margin:2rem 1rem;font-size:2rem;}\", \".code-count.jsx-1165678624{margin-bottom:10rem;}\", \".sussWindow.jsx-1165678624{position:fixed;left:50%;top:50%;width:160px;height:160px;background:rgba(0,0,0,0.8);color:white;border-radius:10px;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-weight:600;}\"]));\n};\n\nvar stateEvent = function stateEvent(state) {\n  return {\n    data: state.ContentReducer,\n    loading: state.TypeReducer.loading\n  };\n};\n\nvar dispatch = function dispatch(_dispatch) {\n  return {\n    action: _dispatch\n  };\n};\n\nexport default connect(stateEvent, dispatch)(Content);","map":null,"metadata":{},"sourceType":"module"}