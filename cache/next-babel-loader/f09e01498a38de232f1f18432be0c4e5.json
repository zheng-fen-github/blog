{"ast":null,"code":"var _jsxFileName = \"C:\\\\newlife\\\\newSite\\\\my-app\\\\component\\\\photo\\\\photo.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\n\nconst Photo = ({\n  id,\n  name\n}) => {\n  const {\n    0: bolb,\n    1: setBolb\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const getphoto = async () => {\n    try {\n      const QURL = process.env.DATA_URL + 'addphoto/getphoto/' + id;\n      let get = await fetch(QURL);\n\n      if (get.ok) {\n        let blob = await get.blob();\n        let src = URL.createObjectURL(blob);\n        setBolb(src);\n      }\n    } catch (err) {\n      console.log(err);\n      setError(true);\n    }\n  };\n\n  useEffect(() => {\n    getphoto();\n  }, [id]);\n  return __jsx(React.Fragment, null, bolb && __jsx(\"img\", {\n    src: bolb,\n    alt: name,\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }), error && __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }\n  }, \"      Wron       \"));\n};\n\nexport default Photo;","map":{"version":3,"sources":["C:/newlife/newSite/my-app/component/photo/photo.js"],"names":["React","useEffect","useState","Photo","id","name","bolb","setBolb","error","setError","getphoto","QURL","process","env","DATA_URL","get","fetch","ok","blob","src","URL","createObjectURL","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAIC,EAAAA;AAAJ,CAAD,KAAe;AACzB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMQ,QAAQ,GAAG,YAAY;AACzB,QAAI;AACA,YAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,oBAAvB,GAA6CV,EAA1D;AACA,UAAIW,GAAG,GAAG,MAAMC,KAAK,CAAEL,IAAF,CAArB;;AACA,UAAGI,GAAG,CAACE,EAAP,EAAW;AACP,YAAIC,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAJ,EAAjB;AACA,YAAIC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAV;AACAX,QAAAA,OAAO,CAACY,GAAD,CAAP;AACH;AACJ,KARD,CAQC,OAAMG,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACCb,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AAEJ,GAdD;;AAeAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACN,EAAD,CAFM,CAAT;AAGA,SACI,4BACIE,IAAI,IAAI;AAAK,IAAA,GAAG,EAAEA,IAAV;AAAiB,IAAA,GAAG,EAAED,IAAtB;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEIG,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFb,CADJ;AAMH,CA3BD;;AA6BA,eAAeL,KAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\r\n\r\nconst Photo = ({id,name}) => {\r\n    const [bolb, setBolb] = useState(null)\r\n    const [error, setError] = useState(false)\r\n    const getphoto = async () => {\r\n        try {\r\n            const QURL = process.env.DATA_URL + 'addphoto/getphoto/'+ id\r\n            let get = await fetch( QURL )\r\n            if(get.ok) {\r\n                let blob = await get.blob();\r\n                let src = URL.createObjectURL(blob);\r\n                setBolb(src);\r\n            }\r\n        }catch(err) {\r\n           console.log(err);\r\n            setError(true);\r\n        }\r\n        \r\n    }\r\n    useEffect(() => {\r\n        getphoto();        \r\n    }, [id])\r\n    return (\r\n        <>\r\n           {bolb && <img src={bolb}  alt={name} className='w-100'/>}          \r\n           {error && <h2>      Wron       </h2> }          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Photo\r\n"]},"metadata":{},"sourceType":"module"}