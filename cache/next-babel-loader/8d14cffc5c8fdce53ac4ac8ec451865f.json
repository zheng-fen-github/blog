{"ast":null,"code":"var _jsxFileName = \"C:\\\\newlife\\\\newSite\\\\my-app\\\\component\\\\component\\\\Pagination.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport Item from \"./item\";\nconst Pagination = React.memo(({\n  codeList,\n  setCode,\n  type\n}) => {\n  console.log(type);\n  const {\n    0: count,\n    1: setCount\n  } = useState(2);\n  const {\n    0: List,\n    1: setList\n  } = useState([]);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      //     设置滚动事件\n      scrollE();\n    });\n    return () => window.removeEventListener(\"scroll\", scrollE);\n  }, [List]);\n  useEffect(() => {\n    setList(codeList.slice(0, 8)); //     设置初始数\n  }, [codeList]);\n\n  const addList = () => {\n    setList(codeList.slice(0, count * 8));\n    setCount(pre => pre += 1);\n  };\n\n  let eventId = useRef();\n\n  const scrollE = () => {\n    //滚动事件定义\n    if (eventId.current) return;\n    eventId.current = setTimeout(() => {\n      try {\n        let scrollCount = Math.round(window.pageYOffset + window.innerHeight);\n\n        if (scrollCount >= document.documentElement.scrollHeight - 2) {\n          document.getElementById(\"loadmore\").click();\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      eventId.current = null;\n    }, 500);\n  };\n\n  let typevalue = useCallback(type === \"JS\" ? \"js\" : type === \"React\" ? \"react\" : type === \"CSS\" ? \"css\" : type === \"nodejs\" ? \"node\" : null, [type]);\n  return __jsx(React.Fragment, null, List.map(e => __jsx(Item, {\n    setCode: setCode,\n    type: typevalue,\n    key: e._id,\n    message: e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    onClick: addList,\n    id: \"loadmore\",\n    className: \"d-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"click\"));\n});\nexport default Pagination;","map":{"version":3,"sources":["C:/newlife/newSite/my-app/component/component/Pagination.js"],"names":["React","useState","useEffect","useRef","useCallback","Item","Pagination","memo","codeList","setCode","type","console","log","count","setCount","List","setList","window","addEventListener","scrollE","removeEventListener","slice","addList","pre","eventId","current","setTimeout","scrollCount","Math","round","pageYOffset","innerHeight","document","documentElement","scrollHeight","getElementById","click","err","typevalue","map","e","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport Item from \"./item\";\r\nconst Pagination = React.memo(({ codeList, setCode, type }) => {\r\n  console.log(type);\r\n  const [count, setCount] = useState(2);\r\n  const [List, setList] = useState([]);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      //     设置滚动事件\r\n      scrollE();\r\n    });\r\n    return () => window.removeEventListener(\"scroll\", scrollE);\r\n  }, [List]);\r\n  useEffect(() => {\r\n    setList(codeList.slice(0, 8)); //     设置初始数\r\n  }, [codeList]);\r\n  const addList = () => {\r\n    setList(codeList.slice(0, count * 8));\r\n    setCount((pre) => (pre += 1));\r\n  };\r\n  let eventId = useRef();\r\n\r\n  const scrollE = () => {\r\n    //滚动事件定义\r\n    if (eventId.current) return;\r\n    eventId.current = setTimeout(() => {\r\n      try {\r\n        let scrollCount = Math.round(window.pageYOffset + window.innerHeight);\r\n        if (scrollCount >= document.documentElement.scrollHeight - 2) {\r\n          document.getElementById(\"loadmore\").click();\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      eventId.current = null;\r\n    }, 500);\r\n  };\r\n  let typevalue = useCallback(\r\n    type === \"JS\"\r\n      ? \"js\"\r\n      : type === \"React\"\r\n      ? \"react\"\r\n      : type === \"CSS\"\r\n      ? \"css\"\r\n      : type === \"nodejs\"\r\n      ? \"node\"\r\n      : null,\r\n    [type]\r\n  );\r\n  return (\r\n    <>\r\n      {List.map((e) => (\r\n        <Item setCode={setCode} type={typevalue} key={e._id} message={e} />\r\n      ))}\r\n      <button onClick={addList} id=\"loadmore\" className=\"d-none\">\r\n        click\r\n      </button>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}