{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\n\nvar Photo = function Photo(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      classname = _ref.classname;\n\n  var _useState = useState(null),\n      bolb = _useState[0],\n      setBolb = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      load = _useState3[0],\n      setLoad = _useState3[1];\n\n  var getphoto = function getphoto() {\n    var QURL, get, blob, img;\n    return _regeneratorRuntime.async(function getphoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            QURL = process.env.DATA_URL + \"addphoto/getphoto/\" + id;\n            setLoad(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(QURL));\n\n          case 5:\n            get = _context.sent;\n\n            if (!get.ok) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(get.blob());\n\n          case 9:\n            blob = _context.sent;\n            img = document.createElement(\"img\");\n            img.src = URL.createObjectURL(blob);\n\n            img.onload = function () {\n              document.querySelector(\".photo-container\").append(img);\n              canvasFunc(img.offsetWidth, img.offsetHeight, img, setBolb);\n              setLoad(false);\n            };\n\n          case 13:\n            _context.next = 20;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            setError(true);\n            setLoad(false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  useEffect(function () {\n    getphoto();\n  }, [id]);\n  return __jsx(React.Fragment, null, bolb && __jsx(\"img\", {\n    src: URL.createObjectURL(bolb),\n    alt: name,\n    className: \"jsx-2887014874\" + \" \" + \"w-100\"\n  }), load && __jsx(\"div\", {\n    className: \"jsx-2887014874\" + \" \" + (\"loading \" + classname || \"\")\n  }), error && __jsx(\"h2\", {\n    className: \"jsx-2887014874\"\n  }, \" \\u52A0\\u8F7D\\u56FE\\u7247\\u5931\\u8D25 \"), __jsx(\"div\", {\n    style: {\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      visibility: \"hidden\",\n      userSelect: \"none\"\n    },\n    className: \"jsx-2887014874\" + \" \" + \"photo-container\"\n  }), __jsx(\"canvas\", {\n    id: \"canvas\",\n    hidden: true,\n    className: \"jsx-2887014874\"\n  }), __jsx(_JSXStyle, {\n    id: \"2887014874\"\n  }, [\".loading.jsx-2887014874{width:100%;height:20px;background:black;height:20vh;-webkit-animation:show-jsx-2887014874 2s infinite;animation:show-jsx-2887014874 2s infinite;z-index:99;}\", \".right.jsx-2887014874{height:44vh;}\", \"@-webkit-keyframes show-jsx-2887014874{0%{background:black;}50%{background:#cbcbcb;}100%{background:black;}}\", \"@keyframes show-jsx-2887014874{0%{background:black;}50%{background:#cbcbcb;}100%{background:black;}}\"]));\n};\n\nvar canvasFunc = function canvasFunc(W, H, img, loadPhoto) {\n  var canvas = document.getElementById(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  var count = Math.min(W, H);\n  canvas.width = count;\n  canvas.height = count;\n  var w = (Math.max(W, H) - count) / 2;\n  W > H ? ctx.drawImage(img, -w, 0) : ctx.drawImage(img, 0, -w); //裁减成一比一\n\n  canvas.toBlob(function (blob) {\n    // 输出图片\n    loadPhoto(blob);\n  }, \"image/png\");\n};\n\nexport default Photo;","map":null,"metadata":{},"sourceType":"module"}